name: Self-hosted CI TOY EXAMPLE

on:
  push:
      paths-ignore:
      - '**.md'
jobs:
  toy-example:
    strategy:
      matrix:
        runner: [linux-self-hosted, mac-self-hosted]

    name: Toy Test Runner 
    runs-on: ['${{ matrix.runner }}' , agc]
    env:
     EXE: ../agc
    steps:
    - uses: actions/checkout@v3
    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '14.1-beta'
      if: ${{ matrix.runner == 'self-hosted-mac' }}
    - name: make agc
      run: make agc
   
#CREATE

    - name: toy example create
      run: |
        cd toy_ex
        $EXE create -o toy.agc ref.fa a.fa b.fa c.fa
        
    - name: toy example listset
      run: |
        cd toy_ex
        printf "a\nb\nc\nref\n" > list
        $EXE listset toy.agc > list_dec
        cmp list list_dec 
        
    - name: toy example listctg
      run: |
        cd toy_ex
        printf "a\n   chr1a\n   chr3a\n" > list
        $EXE listctg toy.agc a > list_dec
        cmp list list_dec 
    
    - name: toy example getset
      run: |
        cd toy_ex
        $EXE getset toy.agc a >  a_dec.fa
        $EXE getset toy.agc b >  b_dec.fa
        $EXE getset toy.agc c >  c_dec.fa
        $EXE getset toy.agc ref >  ref_dec.fa
        cmp a.fa a_dec.fa
        cmp b.fa b_dec.fa
        cmp c.fa c_dec.fa
        cmp ref.fa ref_dec.fa
        
    - name: toy example getcol
      run: |
        cd toy_ex
        mkdir getcol
        $EXE getcol -o getcol toy.agc
        cmp a.fa getcol/a.fa
        cmp b.fa getcol/b.fa
        cmp c.fa getcol/c.fa
        cmp ref.fa getcol/ref.fa
        
    - name: toy example getctg
      run: |
        cd toy_ex
        head -n 2 a.fa > chr1a.fa
        $EXE getctg toy.agc chr1a > chr1a_dec.fa
        cmp chr1a.fa chr1a_dec.fa
        
        tail -n 2 b.fa > t.fa
        $EXE getctg toy.agc t > t_dec.fa
        cmp t.fa t_dec.fa
        
        head -n 2 ref.fa > ref-chr1.fa
        $EXE getctg toy.agc chr1@ref > ref-chr1_dec.fa
        cmp ref-chr1.fa ref-chr1_dec.fa
    
        echo ">chr1:3-10" > ctg.fa
        echo "TAGCTAGC" >> ctg.fa
        $EXE getctg toy.agc chr1@ref:3-10 > ctg_dec.fa
        cmp ctg.fa ctg_dec.fa
        
        echo ">chr3a:1-3" > ctg.fa
        echo "GTT" >> ctg.fa
        $EXE getctg toy.agc chr3a:1-3 > ctg_dec.fa
        cmp ctg.fa ctg_dec.fa
        
        echo ">g h i 21:3-4" > ctg.fa
        echo "AG" >> ctg.fa
        $EXE getctg toy.agc g:3-4 > ctg_dec.fa
        cmp ctg.fa ctg_dec.fa
        
#CREATE-C

    - name: toy example create -c AND -a -c
      run: |
        cd toy_ex
        $EXE create -c -o toy.agc ref2.fa c.fa 
        $EXE create -a -c ref2.fa b.fa  > toy2.agc
        
    - name: toy example listset -c
      run: |
        cd toy_ex
        printf "1\n2\n3\nchr1\n" > list
        $EXE listset toy.agc > list_dec
        cmp list list_dec 
        printf "c\nchr1\ng\nt\n" > list
        $EXE listset toy2.agc > list_dec
        cmp list list_dec 
        
    
    - name: toy example getset -c 
      run: |
        cd toy_ex
        $EXE getset toy.agc chr1 >  chr1_dec.fa
        $EXE getset toy.agc 1 >  1_dec.fa
        $EXE getset toy.agc 2 >  2_dec.fa
        $EXE getset toy.agc 3 >  3_dec.fa
        head -n 2 c.fa > 1.fa
        head -n 4 c.fa | tail -n 2 > 2.fa
        tail -n 2 c.fa > 3.fa
        cat 1.fa 1_dec.fa
        cmp 1.fa 1_dec.fa
        cat 2.fa 2_dec.fa
        cmp 2.fa 2_dec.fa
        cat 3.fa 3_dec.fa
        cmp 3.fa 3_dec.fa
        cmp ref2.fa chr1_dec.fa
        $EXE getset toy2.agc chr1 >  chr1_dec.fa
        cat ref2.fa chr1_dec.fa
        cmp ref2.fa chr1_dec.fa
        $EXE getset toy2.agc c >  c_dec.fa
        $EXE getset toy2.agc g >  g_dec.fa
        $EXE getset toy2.agc t >  t_dec.fa
        sed -n '3p;4p' < b.fa > g.fa
        sed -n '5p;6p' < b.fa > c_.fa
        sed -n '7p;8p' < b.fa > t.fa
        cat g.fa g_dec.fa
        cmp g.fa g_dec.fa
        cat c_.fa c_dec.fa
        cmp c_.fa c_dec.fa
        cat t.fa t_dec.fa
        cmp t.fa t_dec.fa
        
        
    - name: toy example getcol -c
      run: |
        cd toy_ex
        rm -rf getcol
        mkdir getcol
        $EXE getcol -o getcol toy.agc
        cmp 1.fa getcol/1.fa
        cmp 2.fa getcol/2.fa
        cmp 3.fa getcol/3.fa
        cmp ref2.fa getcol/chr1.fa
        rm -rf getcol
        mkdir getcol
        $EXE getcol -o getcol toy2.agc
        cmp c_.fa getcol/c.fa
        cmp t.fa getcol/t.fa
        cmp g.fa getcol/g.fa
        cmp ref2.fa getcol/chr1.fa
        
    - name: toy example getctg -c
      run: |
        cd toy_ex
        $EXE getctg toy.agc chr1 > chr1_dec.fa
        cmp ref2.fa chr1_dec.fa
    
        echo ">chr1:3-7" > ctg.fa
        echo "TAGCT" >> ctg.fa
        $EXE getctg toy.agc chr1:3-7 > ctg_dec.fa
        cmp ctg.fa ctg_dec.fa
        
        echo ">3:3-10" > ctg.fa
        echo "TCCCGGGA" >> ctg.fa
        $EXE getctg toy.agc 3:3-10 > ctg_dec.fa
        cmp ctg.fa ctg_dec.fa
        
        echo ">g h i 21:3-4" > ctg.fa
        echo "AG" >> ctg.fa
        $EXE getctg toy2.agc g:3-4 > ctg_dec.fa
        cmp ctg.fa ctg_dec.fa
               
    - name: toy example append -a + getset
      run: |
        cd toy_ex
        mkdir test-toy
        $EXE create -a -c ref2.fa b.fa  > test-toy/toy2.agc
        $EXE append -a -c test-toy/toy2.agc c.fa > test-toy/toy3.agc
        $EXE listset test-toy/toy3.agc
        sed -n '1p;2p' < c.fa > test-toy/1.fa
        sed -n '3p;4p' < c.fa > test-toy/2.fa
        sed -n '5p;6p' < c.fa > test-toy/3.fa
        sed -n '3p;4p' < b.fa > test-toy/g.fa
        sed -n '5p;6p' < b.fa > test-toy/c_.fa
        sed -n '7p;8p' < b.fa > test-toy/t.fa
        rm -f 1_dec.fa
        rm -f 2_dec.fa
        rm -f 3_dec.fa
        rm -f chr1_dec.fa
        rm -f c_dec.fa
        rm -f g_dec.fa
        rm -f t_dec.fa
        $EXE getset test-toy/toy3.agc chr1 >  test-toy/chr1_dec.fa
        cat ref2.fa test-toy/chr1_dec.fa
        cmp ref2.fa test-toy/chr1_dec.fa
        $EXE getset test-toy/toy3.agc c >  test-toy/c_dec.fa
        $EXE getset test-toy/toy3.agc g >  test-toy/g_dec.fa
        $EXE getset test-toy/toy3.agc t >  test-toy/t_dec.fa
        $EXE getset test-toy/toy3.agc 1 >  test-toy/1_dec.fa
        $EXE getset test-toy/toy3.agc 2 >  test-toy/2_dec.fa
        $EXE getset test-toy/toy3.agc 3 >  test-toy/3_dec.fa
        cd test-toy
        cat g.fa g_dec.fa
        cmp g.fa g_dec.fa
        cat c_.fa c_dec.fa
        cmp c_.fa c_dec.fa
        cat t.fa t_dec.fa
        cmp t.fa t_dec.fa
        cat 1.fa 1_dec.fa
        cmp 1.fa 1_dec.fa
        cat 2.fa 2_dec.fa
        cmp 2.fa 2_dec.fa
        cat 3.fa 3_dec.fa
        cmp 3.fa 3_dec.fa
        
        
                       
    - name: toy example append -c  + getcol
      run: |
        cd toy_ex
        $EXE append -c toy2.agc c.fa > toy3.agc
        rm -rf getcol
        mkdir getcol
        $EXE getcol -o getcol toy3.agc
        cmp ref2.fa getcol/chr1.fa
        cmp c_.fa getcol/c.fa
        cmp t.fa getcol/t.fa
        cmp g.fa getcol/g.fa
        cmp 1.fa getcol/1.fa
        cmp 2.fa getcol/2.fa
        cmp 3.fa getcol/3.fa
        
        
        
        
#APPEND

    - name: toy example create-append-getset
      run: |
        cd toy_ex
        $EXE create -o tmp0.agc ref.fa
        $EXE append tmp0.agc a.fa > tmp1.agc
        $EXE append tmp1.agc b.fa > tmp2.agc
        $EXE append tmp2.agc c.fa > toy_app.agc
        $EXE getset toy_app.agc a >  a_dec.fa
        $EXE getset toy_app.agc b >  b_dec.fa
        $EXE getset toy_app.agc c >  c_dec.fa
        $EXE getset toy_app.agc ref >  ref_dec.fa
        cmp a.fa a_dec.fa
        cmp b.fa b_dec.fa
        cmp c.fa c_dec.fa
        cmp ref.fa ref_dec.fa
        
    - name: toy example append listset
      run: |
        cd toy_ex
        printf "a\nb\nc\nref\n" > list
        $EXE listset toy_app.agc > list_dec
        cmp list list_dec 
        
    - name: toy example append listctg
      run: |
        cd toy_ex
        printf "a\n   chr1a\n   chr3a\n" > list
        $EXE listctg toy_app.agc a > list_dec
        cmp list list_dec 
        
    - name: toy example append getcol
      run: |
        cd toy_ex
        mkdir getcola
        $EXE getcol -o getcola toy_app.agc
        cmp a.fa getcola/a.fa
        cmp b.fa getcola/b.fa
        cmp c.fa getcola/c.fa
        cmp ref.fa getcola/ref.fa
        
    - name: toy example append getctg
      run: |
        cd toy_ex
        head -n 2 a.fa > chr1a.fa
        $EXE getctg toy_app.agc chr1a > chr1a_dec.fa
        cmp chr1a.fa chr1a_dec.fa
        
        tail -n 2 b.fa > t.fa
        $EXE getctg toy_app.agc t > t_dec.fa
        cmp t.fa t_dec.fa
        
        head -n 2 ref.fa > ref-chr1.fa
        $EXE getctg toy_app.agc chr1@ref > ref-chr1_dec.fa
        cmp ref-chr1.fa ref-chr1_dec.fa
    
        echo ">chr1:3-10" > ctg.fa
        echo "TAGCTAGC" >> ctg.fa
        $EXE getctg toy_app.agc chr1@ref:3-10 > ctg_dec.fa
        cmp ctg.fa ctg_dec.fa
        
        echo ">chr3a:1-3" > ctg.fa
        echo "GTT" >> ctg.fa
        $EXE getctg toy_app.agc chr3a:1-3 > ctg_dec.fa
        cmp ctg.fa ctg_dec.fa
        
#ADAPTIVE APPEND

    - name: toy example create-append adaptive-getset
      run: |
        cd toy_ex
        $EXE create -a -o tmp0.agc ref.fa
        $EXE append -a tmp0.agc a.fa > tmp1.agc
        $EXE append -a tmp1.agc b.fa > tmp2.agc
        $EXE append -a tmp2.agc c.fa > toy_app.agc
        $EXE getset toy_app.agc a >  a_dec.fa
        $EXE getset toy_app.agc b >  b_dec.fa
        $EXE getset toy_app.agc c >  c_dec.fa
        $EXE getset toy_app.agc ref >  ref_dec.fa
        cmp a.fa a_dec.fa
        cmp b.fa b_dec.fa
        cmp c.fa c_dec.fa
        cmp ref.fa ref_dec.fa
        
    - name: toy example append adaptive listset
      run: |
        cd toy_ex
        printf "a\nb\nc\nref\n" > list
        $EXE listset toy_app.agc > list_dec
        cmp list list_dec 
        
    - name: toy example append adaptive listctg
      run: |
        cd toy_ex
        printf "a\n   chr1a\n   chr3a\n" > list
        $EXE listctg toy_app.agc a > list_dec
        cmp list list_dec 
        
    - name: toy example append adaptive getcol
      run: |
        cd toy_ex
        mkdir getcolaa
        $EXE getcol -o getcolaa toy_app.agc
        cmp a.fa getcolaa/a.fa
        cmp b.fa getcolaa/b.fa
        cmp c.fa getcolaa/c.fa
        cmp ref.fa getcolaa/ref.fa
        
    - name: toy example append adaptive getctg
      run: |
        cd toy_ex
        head -n 2 a.fa > chr1a.fa
        $EXE getctg toy_app.agc chr1a > chr1a_dec.fa
        cmp chr1a.fa chr1a_dec.fa
        
        tail -n 2 b.fa > t.fa
        $EXE getctg toy_app.agc t > t_dec.fa
        cmp t.fa t_dec.fa
        
        head -n 2 ref.fa > ref-chr1.fa
        $EXE getctg toy_app.agc chr1@ref > ref-chr1_dec.fa
        cmp ref-chr1.fa ref-chr1_dec.fa
    
        echo ">chr1:3-10" > ctg.fa
        echo "TAGCTAGC" >> ctg.fa
        $EXE getctg toy_app.agc chr1@ref:3-10 > ctg_dec.fa
        cmp ctg.fa ctg_dec.fa
        
        echo ">chr3a:1-3" > ctg.fa
        echo "GTT" >> ctg.fa
        $EXE getctg toy_app.agc chr3a:1-3 > ctg_dec.fa
        cmp ctg.fa ctg_dec.fa
        
        
        
